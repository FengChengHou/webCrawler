<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
       	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       	http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context-3.1.xsd
       	http://www.springframework.org/schema/mvc
	   	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	   	http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<mvc:annotation-driven />

	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.iflyun.webCrawler.web.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	
	<!--默认的注解处理器  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<!-- <property name="messageConverters">
			<list>
				<ref bean="fastJsonHttpMessageConverter" />
			</list>
		</property> -->
	</bean>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件	
	<bean id="fastJsonHttpMessageConverter" class="com.iflyun.webCrawler.web.converter.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>-->

	
	<!-- 全局异常配置 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">common/error/500</prop>
				<prop key="java.lang.Throwable">common/error/500</prop>
				<prop key="com.iflyun.webCrawler.interceptor.SessionTimeoutException">redirect:/login</prop>
				<prop key="com.iflyun.webCrawler.interceptor.AdminSessionTimeoutException">redirect:/login</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="common/error/500">500</prop>
				<prop key="common/error/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="/common/error/500"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<!--  org.springframework.web.servlet.view.JstlView -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="requestContextAttribute" value="rc" />
	</bean>
	
	<!-- 使用注解@Valid -->
   	<mvc:annotation-driven validator="validator" />  
	
	<!-- SpringMVC 使用JSR-303进行校验 @Valid -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"  
   		p:validationMessageSource-ref="messageSource" />  
    
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- 指定URL跳转
	<mvc:view-controller path="/" view-name="redirect:/toLogin" /> -->
		
	<!-- 配置静态资源的访问 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- 拦截器
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.zhen.goldtrans.web.interceptor.AuthInterceptor" p:ignoreUris-ref="ignoreUris" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/client/**" />
			<bean class="com.zhen.goldtrans.web.interceptor.ClientOnLineInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	
	<!-- 拦截器配置 -->
	<mvc:interceptors>
	  <!-- session超时 -->
	  <mvc:interceptor>
	    <mvc:mapping path="/home"/>
	    <bean class="com.iflyun.webCrawler.interceptor.SessionTimeoutInterceptor">
	      <property name="allowUrls">
	        <list>
	          <!-- 如果请求中包含以下路径，则不进行拦截 -->
	          <value>/login</value>
	          <value>/js</value>
	          <value>/css</value>
	          <value>/image</value>
	          <value>/images</value>
	        </list>
	      </property>
	    </bean>
	  </mvc:interceptor>
	  <mvc:interceptor>
	    <mvc:mapping path="home"/>
	    <bean class="com.iflyun.webCrawler.interceptor.AdminSessionTimeoutInterceptor">
	      <property name="allowUrls">
	        <list>
	          <!-- 如果请求中包含以下路径，则不进行拦截 -->
	          <value>/login</value>
	          <value>/checklogin</value>
	          <value>/js</value>
	          <value>/css</value>
	          <value>/image</value>
	          <value>/images</value>
	        </list>
	      </property>
	    </bean>
	  </mvc:interceptor>
	</mvc:interceptors>
</beans>